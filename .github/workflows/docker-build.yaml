name: Create and publish Docker images with specific build args

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - dev

env:
    REGISTRY: ghcr.io
    FULL_IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
    build-main-image:
        uses: ./.github/workflows/build-docker-image.yaml
        with:
            image_name: ${{ github.repository }}
            cache_id: main

    build-cuda-image:
        uses: ./.github/workflows/build-docker-image.yaml
        with:
            image_name: ${{ github.repository }}
            image_tag: |
                type=raw,enable=${{ github.ref == 'refs/heads/main' }},prefix=,suffix=,value=cuda
            cache_id: cuda
            docker_flavor: |
                suffix=-cuda,onlatest=true
            build_args: |
                USE_CUDA=true

    merge-main-images:
        runs-on: ubuntu-latest
        needs: [build-main-image]
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  pattern: digests-main-*
                  path: /tmp/digests
                  merge-multiple: true

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata for Docker images (default latest tag)
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.FULL_IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=tag
                      type=sha,prefix=git-
                  flavor: |
                      latest=${{ github.ref == 'refs/heads/main' }}

            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                    $(printf '${{ env.FULL_IMAGE_NAME }}@sha256:%s ' *)

            - name: Inspect image
              run: |
                  docker buildx imagetools inspect ${{ env.FULL_IMAGE_NAME }}:${{ steps.meta.outputs.version }}

    merge-cuda-images:
        runs-on: ubuntu-latest
        needs: [build-cuda-image]
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  pattern: digests-cuda-*
                  path: /tmp/digests
                  merge-multiple: true

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata for Docker images (default latest tag)
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.FULL_IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=tag
                      type=sha,prefix=git-
                      type=raw,enable=${{ github.ref == 'refs/heads/main' }},prefix=,suffix=,value=cuda
                  flavor: |
                      latest=${{ github.ref == 'refs/heads/main' }}
                      suffix=-cuda,onlatest=true

            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                    $(printf '${{ env.FULL_IMAGE_NAME }}@sha256:%s ' *)

            - name: Inspect image
              run: |
                  docker buildx imagetools inspect ${{ env.FULL_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
